# Usage example:
#   ansible-playbook test_sonic.yml -i inventory --limit arc-switch1028 --tags buffer_profile -e skip_interface_check=true
#

- set_fact:
    port_name="Ethernet64"
    speed="[ '10', '25', '40', '50', '56', '100' ]"
    minigr="[ 'minigraph0.xml', 'minigraph1.xml']"
    test_files_dir="roles/test/files/buffer_profile"

- block:
    - name: Copy JSON configs to DUT
      template: src=set_speed.j2 dest=/tmp/{{ item }}G.json
      with_items:
        - "{{ speed }}"

    - name: Copy test files to DUT
      copy: src={{ item }} dest=/tmp/
      with_fileglob:
        - "{{ test_files_dir }}/*"

    - name: Generate buffers config
      shell: sonic-cfggen -m /tmp/{{ item.1 }} -t /usr/share/sonic/templates/msn27xx.32ports.buffers.json.j2 >/tmp/buffers{{ item.0}}.json
      with_indexed_items:
        - "{{ minigr }}"

    - name: Compare generated buffers configuration with the expected
      shell: diff /tmp/{{ (item | basename | splitext)[0]}}.json /tmp/{{ (item | basename).split('_')[0] }}.json
      register: out
      with_fileglob:
        - "{{ test_files_dir }}/buf*.json"

  vars:
    ansible_shell_type: docker
    ansible_python_interpreter: docker exec -i swss python

- block:
    - name: Get original port speed
      shell: docker exec database redis-cli hget PORT_TABLE:{{port_name}} speed
      register: org_speed
      failed_when: org_speed.rc != 0

    - set_fact:
        original_speed="{{org_speed.stdout[:-3]}}G"

    - debug: msg="Original port speed {{original_speed}}"

    - name: Set Port Speed to 100G
      shell: swssconfig /tmp/100G.json
      vars:
        ansible_shell_type: docker
        ansible_python_interpreter: docker exec -i swss python

    - name: Pause 2 sec
      pause:
        seconds: 2

    - name: Check profile for 100G
      shell: docker exec database redis-cli hgetall BUFFER_PG_TABLE:{{port_name}}:3-4 | grep BUFFER_PROFILE_TABLE
      register: buffer_profile
      failed_when: buffer_profile.rc != 0

    - set_fact:
        profile100g="{{buffer_profile.stdout.split(':')[1][:-1]}}"

    - debug: msg="100G profile {{profile100g}}"

    - fail: msg="Invalid profile for 100G"
      when: profile100g.split('_')[2] != '100G'

    - name: Set Port Speed to 40G
      shell: swssconfig /tmp/40G.json
      vars:
        ansible_shell_type: docker
        ansible_python_interpreter: docker exec -i swss python

    - name: Pause 2 sec
      pause:
        seconds: 2

    - name: Check profile for 40G
      shell: docker exec database redis-cli hgetall BUFFER_PG_TABLE:{{port_name}}:3-4 | grep BUFFER_PROFILE_TABLE
      register: buffer_profile
      failed_when: buffer_profile.rc != 0

    - set_fact:
        profile40g="{{buffer_profile.stdout.split(':')[1][:-1]}}"

    - debug: msg="40G profile {{profile40g}}"

    - fail: msg="Invalid profile for 40G"
      when: profile40g.split('_')[2] != '40G'

  always:
    - name: Pause 2 sec
      pause:
        seconds: 2

    - name: Restore Port Speed
      shell: swssconfig /tmp/{{original_speed}}.json
      when: original_speed is defined
      vars:
        ansible_shell_type: docker
        ansible_python_interpreter: docker exec -i swss python
